// Example of a simple web application with multiple vulnerabilities

// Vulnerable to Cross-Site Scripting (XSS)
function greetUser() {
    var userInput = document.getElementById("username").value; // User input from a text box
    // Directly inserting user input into the HTML, vulnerable to XSS
    document.getElementById("greeting").innerHTML = "Hello, " + userInput + "!";
}

// Vulnerable to SQL Injection (simulated)
function fetchUserData() {
    var userId = document.getElementById("userId").value;
    // Vulnerable SQL query simulation
    var sqlQuery = "SELECT * FROM users WHERE id = '" + userId + "';"; // No sanitization
    console.log("Executing SQL: " + sqlQuery);
    // Assume a function `executeSQL` exists that runs the query against a database
    executeSQL(sqlQuery);
}

// Vulnerable to Insecure Direct Object Reference (IDOR)
function viewUserProfile() {
    var userId = document.getElementById("profileId").value;
    // Directly using user-provided ID in URL, could access other user profiles
    window.location.href = "/profile?id=" + userId; // No authorization check
}

// Vulnerable to Command Injection (simulated)
function executeCommand() {
    var command = document.getElementById("commandInput").value;
    // Using eval to execute a command, vulnerable to command injection
    eval(command); // Dangerous: Executes arbitrary JavaScript code
}

// HTML structure (for demonstration)
document.body.innerHTML = `
    <h1>Vulnerable Web Application</h1>
    <input type="text" id="username" placeholder="Enter your name">
    <button onclick="greetUser()">Greet User</button>
    <div id="greeting"></div>

    <input type="text" id="userId" placeholder="Enter user ID">
    <button onclick="fetchUserData()">Fetch User Data</button>

    <input type="text" id="profileId" placeholder="Enter profile ID">
    <button onclick="viewUserProfile()">View Profile</button>

    <input type="text" id="commandInput" placeholder="Enter command to execute">
    <button onclick="executeCommand()">Execute Command</button>
`;

// Function to simulate SQL execution (for demonstration)
function executeSQL(query) {
    console.log("Executing SQL Query: " + query);
    // Here you would normally execute the query against a database
}
